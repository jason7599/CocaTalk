CREATE TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(25) NOT NULL UNIQUE,
    password_hash TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT NOW()
);


CREATE TABLE rooms (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    last_message_at TIMESTAMP NOT NULL DEFAULT NOW(),
    next_seq BIGINT NOT NULL DEFAULT 0
);
CREATE INDEX idx_rooms_last_message_at ON rooms(last_message_at DESC);


CREATE TABLE room_members (
    room_id BIGINT NOT NULL REFERENCES rooms(id) ON DELETE CASCADE,
    user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    joined_at TIMESTAMP NOT NULL DEFAULT NOW(),
    last_ack BIGINT NOT NULL,

    PRIMARY KEY (room_id, user_id)
);
CREATE INDEX idx_room_members_user_id ON room_members(user_id);


CREATE TABLE messages (
    room_id BIGINT NOT NULL REFERENCES rooms(id) ON DELETE CASCADE,
    seq_no BIGINT NOT NULL,
    user_id  BIGINT REFERENCES users(id) ON DELETE SET NULL,
    content TEXT NOT NULL CHECK(BTRIM(content) <> ''),
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),

    PRIMARY KEY (room_id, seq_no)
);
CREATE INDEX idx_messages_room_seq ON messages(room_id, seq_no DESC);


CREATE TABLE invitations (
    sender_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    receiver_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    sent_at TIMESTAMP NOT NULL DEFAULT NOW(),

    PRIMARY KEY (sender_id, receiver_id),
    CONSTRAINT invitations_no_self CHECK (sender_id <> receiver_id)
);
CREATE INDEX idx_invitations_receiver_sent_at ON invitations(receiver_id, sent_at DESC);
CREATE INDEX idx_invitations_sender_sent_at ON invitations(sender_id, sent_at DESC);